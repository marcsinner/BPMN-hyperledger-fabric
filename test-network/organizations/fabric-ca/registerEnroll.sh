#!/bin/bash

function createOrgClient() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/orgClient.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/orgClient.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-orgClient --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-orgClient.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-orgClient.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-orgClient.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-orgClient.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/orgClient.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orgClient's CA cert to orgClient's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/orgClient.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem" "${PWD}/organizations/peerOrganizations/orgClient.example.com/msp/tlscacerts/ca.crt"

  # Copy orgClient's CA cert to orgClient's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/orgClient.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem" "${PWD}/organizations/peerOrganizations/orgClient.example.com/tlsca/tlsca.orgClient.example.com-cert.pem"

  # Copy orgClient's CA cert to orgClient's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/orgClient.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem" "${PWD}/organizations/peerOrganizations/orgClient.example.com/ca/ca.orgClient.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-orgClient --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-orgClient --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-orgClient --id.name orgClientadmin --id.secret orgClientadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-orgClient -M "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/msp" --csr.hosts peer0.orgClient.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/orgClient.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-orgClient -M "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/tls" --enrollment.profile tls --csr.hosts peer0.orgClient.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/orgClient.example.com/peers/peer0.orgClient.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-orgClient -M "${PWD}/organizations/peerOrganizations/orgClient.example.com/users/User1@orgClient.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/orgClient.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/orgClient.example.com/users/User1@orgClient.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://orgClientadmin:orgClientadminpw@localhost:7054 --caname ca-orgClient -M "${PWD}/organizations/peerOrganizations/orgClient.example.com/users/Admin@orgClient.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/orgClient/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/orgClient.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/orgClient.example.com/users/Admin@orgClient.example.com/msp/config.yaml"
}

function createOrgPlatform() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/orgPlatform.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/orgPlatform.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-orgPlatform --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orgPlatform.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orgPlatform.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orgPlatform.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orgPlatform.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orgPlatform's CA cert to orgPlatform's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem" "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/msp/tlscacerts/ca.crt"

  # Copy orgPlatform's CA cert to orgPlatform's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem" "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/tlsca/tlsca.orgPlatform.example.com-cert.pem"

  # Copy orgPlatform's CA cert to orgPlatform's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem" "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/ca/ca.orgPlatform.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-orgPlatform --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-orgPlatform --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-orgPlatform --id.name orgPlatformadmin --id.secret orgPlatformadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-orgPlatform -M "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/msp" --csr.hosts peer0.orgPlatform.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-orgPlatform -M "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/tls" --enrollment.profile tls --csr.hosts peer0.orgPlatform.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/peers/peer0.orgPlatform.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-orgPlatform -M "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/users/User1@orgPlatform.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/users/User1@orgPlatform.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://orgPlatformadmin:orgPlatformadminpw@localhost:8054 --caname ca-orgPlatform -M "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/users/Admin@orgPlatform.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/orgPlatform/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/orgPlatform.example.com/users/Admin@orgPlatform.example.com/msp/config.yaml"
}

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/example.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp" --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls" --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml"
}
